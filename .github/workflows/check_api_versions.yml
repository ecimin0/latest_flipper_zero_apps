name: compare and build

on:
  schedule:
    - cron: '49 * * * *'
  workflow_dispatch: # on button click

jobs:
  compare_and_build:
    name: compare and build
    strategy:
      matrix:
        firmware_branch: [dev, release-candidate, release]
    runs-on: ubuntu-latest
    steps:
      - name: checkout this repo
        uses: actions/checkout@v3

      - name: get current version
        id: get_current
        run: |
          echo "CURRENT=$(yq -r '.versions.${{ matrix.firmware_branch }}' api_versions.yaml)" >> "$GITHUB_ENV"
          

      - name: checkout upstream repo
        uses: actions/checkout@v3
        with:
          repository: flipperdevices/flipperzero-firmware
          path: './flipperzero-firmware'
          ref: ${{ matrix.firmware_branch }}
          submodules: true
      
      - name: get upstream API version
        id: get_upstream
        run: |
          echo "UPSTREAM=$(awk -F ',' 'NR==2{print $3}' flipperzero-firmware/firmware/targets/f7/api_symbols.csv)" >> $GITHUB_ENV
          echo "FULL_UPSTREAM=$(awk 'NR==2{print}' flipperzero-firmware/firmware/targets/f7/api_symbols.csv)" >> $GITHUB_ENV

      - name: update api_versions.yaml
        id: update_version
        if: ${{ env.CURRENT < env.UPSTREAM }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'api_versions.yaml'
          propertyPath: 'versions.${{ matrix.firmware_branch }}'
          value: ${{ env.UPSTREAM }}
          commitChange: false
          method: update

      - name: push api_versions.yaml changes
        if: ${{ steps.update_version.conclusion != 'skipped' }}
        run: |
          git --no-pager diff
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add api_versions.yaml
          git commit -m "update api_versions"
          git push

# echo "newer API version detected upstream"
#           sed -i "1s@^@${FULL_UPSTREAM}\\n@" api_versions.csv

      - name: build
        if: ${{ steps.update_version.conclusion != 'skipped' }}
        run: |
          mv source/* flipperzero-firmware/applications_user
          cd flipperzero-firmware && ./fbt faps
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add flipperzero-firmware/build/f7-firmware-D/.extapps/*.fap
          git commit -m "built flipper apps via workflow"
          git push

#       - name: commit and push
#         run: |
#           git config user.name github-actions
#           git config user.email github-actions@github.com
#           git add flipperzero-firmware/build/f7-firmware-D/.extapps/*.fap
#           git commit -m "built flipper apps via build_apps workflow"
#           git push

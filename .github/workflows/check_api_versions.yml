name: check for newer api version

on:
  schedule:
    - cron: '49 * * * *'
  workflow_dispatch: # on button click
  workflow_call:

jobs:
  check_api_version:
    name: check for newer api version
    runs-on: ubuntu-latest
    steps:
      - name: checkout this repo
        uses: actions/checkout@v3

      - name: get current version
        id: get_current
        run: |
          echo "CURRENT=$(awk -F ',' 'NR==1{print $3}' api_versions.csv)" >> "$GITHUB_ENV"

      - name: checkout upstream repo
        uses: actions/checkout@v3
        with:
          repository: flipperdevices/flipperzero-firmware
          path: './flipperzero-firmware'
      
      - name: get upstream API version
        id: get_upstream
        run: |
          echo "UPSTREAM=$(awk -F ',' 'NR==2{print $3}' flipperzero-firmware/firmware/targets/f7/api_symbols.csv)" >> $GITHUB_ENV
          echo "FULL_UPSTREAM=$(awk 'NR==2{print}' flipperzero-firmware/firmware/targets/f7/api_symbols.csv)" >> $GITHUB_ENV

      - name: compare versions and push
        id: compare_versions
        if: ${{ env.CURRENT < env.UPSTREAM }}
        run: |
          echo "newer API version detected upstream"
          sed -i "1s@^@${FULL_UPSTREAM}\\n@" api_versions.csv
          git --no-pager diff
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add api_versions.csv
          git commit -m "update api_versions"
          git push

  build_apps:
    needs: "check_api_version"
    #     if: ${{ github.event.workflow_run.conclusion == 'success' }}
    if: ${{ check_api_version.result == 'success' }}
#     if: ${{ steps.compare_versions.conclusion != 'skipped' }}
#     if: ${{  }}
    strategy:
      matrix:
        firmware_branch: [dev, release-candidate, release]

    name: build application
    runs-on: ubuntu-latest
    steps:
      - name: checkout this repo
        uses: actions/checkout@v3

      - name: checkout flipper zero firmware repo
        uses: actions/checkout@v3
        with:
          repository: flipperdevices/flipperzero-firmware
          path: './flipperzero-firmware'
          submodules: true
          ref: ${{ matrix.firmware_branch }}

      - name: move source code
        run: mv source/* flipperzero-firmware/applications_user

      - name: build
        run: cd flipperzero-firmware && ./fbt faps

      - name: commit and push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add flipperzero-firmware/build/f7-firmware-D/.extapps/*.fap
          git commit -m "built flipper apps via build_apps workflow"
          git push


    

#       - name: no update
#         if: ${{ env.CURRENT >= env.UPSTREAM }}
#         run: echo "no update required" && exit 1
